/*
 * Admin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateSubscriptionRequest {
    /// Source uri. Accepted forms:  * `kafka://<cluster_name>/<topic_name>`, e.g. `kafka://my-cluster/my-topic`
    #[serde(rename = "source")]
    pub source: String,
    /// Sink uri. Accepted forms:  * `service://<service_name>/<service_name>`, e.g. `service://Counter/count`
    #[serde(rename = "sink")]
    pub sink: String,
    /// Additional options to apply to the subscription.
    #[serde(rename = "options", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub options: Option<Option<std::collections::HashMap<String, String>>>,
}

impl CreateSubscriptionRequest {
    pub fn new(source: String, sink: String) -> CreateSubscriptionRequest {
        CreateSubscriptionRequest {
            source,
            sink,
            options: None,
        }
    }
}

