/*
 * Admin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModifyServiceStateRequest {
    /// If set, the latest version of the state is compared with this value and the operation will fail when the versions differ.
    #[serde(rename = "version", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub version: Option<Option<String>>,
    /// To what virtual object key to apply this change
    #[serde(rename = "object_key")]
    pub object_key: String,
    /// The new state to replace the previous state with
    #[serde(rename = "new_state")]
    pub new_state: std::collections::HashMap<String, Vec<i32>>,
}

impl ModifyServiceStateRequest {
    pub fn new(object_key: String, new_state: std::collections::HashMap<String, Vec<i32>>) -> ModifyServiceStateRequest {
        ModifyServiceStateRequest {
            version: None,
            object_key,
            new_state,
        }
    }
}

